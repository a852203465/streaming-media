<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.darkjrong.streamingmedia.mapper.DvrMapper">
  <resultMap id="BaseResultMap" type="cn.darkjrong.streamingmedia.common.pojo.entity.Dvr">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="device_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_user" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="updated_time" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="updated_user" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="raw_file" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, device_id, url, file, created_user, created_time, updated_time, updated_user, 
    description, raw_file
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dvr
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dvr
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.darkjrong.streamingmedia.common.pojo.entity.Dvr">
    insert into dvr (id, device_id, url, 
      file, created_user, created_time, 
      updated_time, updated_user, description, raw_file
      )
    values (#{id,jdbcType=BIGINT}, #{deviceId,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR}, 
      #{file,jdbcType=VARCHAR}, #{createdUser,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, 
      #{updatedTime,jdbcType=BIGINT}, #{updatedUser,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{rawFile,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.darkjrong.streamingmedia.common.pojo.entity.Dvr">
    insert into dvr
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="file != null">
        file,
      </if>
      <if test="createdUser != null">
        created_user,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="updatedUser != null">
        updated_user,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="rawFile != null">
        raw_file,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="file != null">
        #{file,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=BIGINT},
      </if>
      <if test="updatedUser != null">
        #{updatedUser,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="rawFile != null">
        #{rawFile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.darkjrong.streamingmedia.common.pojo.entity.Dvr">
    update dvr
    <set>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="file != null">
        file = #{file,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        created_user = #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=BIGINT},
      </if>
      <if test="updatedUser != null">
        updated_user = #{updatedUser,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="rawFile != null">
        raw_file = #{rawFile,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.darkjrong.streamingmedia.common.pojo.entity.Dvr">
    update dvr
    set device_id = #{deviceId,jdbcType=BIGINT},
      url = #{url,jdbcType=VARCHAR},
      file = #{file,jdbcType=VARCHAR},
      created_user = #{createdUser,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=BIGINT},
      updated_time = #{updatedTime,jdbcType=BIGINT},
      updated_user = #{updatedUser,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      raw_file = #{rawFile,jdbcType=VARCHAR},
    where id = #{id,jdbcType=BIGINT}
  </update><select id="findDvrs" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
    from dvr
    <where>
        <if test="deviceId != null">
            device_id = #{deviceId,jdbcType=BIGINT}
        </if>
    </where>
  </select>

</mapper>